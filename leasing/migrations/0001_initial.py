# Generated by Django 2.0.2 on 2018-03-06 13:41

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import leasing.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('is_business', models.BooleanField(default=False, verbose_name='Is a business')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business name')),
                ('business_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Postal code')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('language', models.CharField(blank=True, choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokm√•l'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], max_length=255, null=True, verbose_name='Language')),
                ('national_identification_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='National identification number')),
                ('address_protection', models.BooleanField(default=False, verbose_name='Address protection')),
                ('customer_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer number')),
                ('sap_customer_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='SAP customer number')),
                ('electronic_billing_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Electronic billing address')),
                ('partner_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Partner code')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('identifier', models.IntegerField(verbose_name='Identifier within the municipality')),
            ],
            options={
                'ordering': ('municipality__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Financing',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Form of financing',
                'verbose_name_plural': 'Forms of financing',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Hitas',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Hitas',
                'verbose_name_plural': 'Hitas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='IntendedUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('sequence', models.PositiveIntegerField(blank=True, null=True, verbose_name='Sequence number')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.LeaseState, max_length=30, null=True, verbose_name='State')),
                ('classification', enumfields.fields.EnumField(blank=True, enum=leasing.enums.Classification, max_length=30, null=True, verbose_name='Classification')),
                ('intended_use_note', models.TextField(blank=True, null=True, verbose_name='Intended use note')),
                ('transferable', models.BooleanField(default=True, verbose_name='Transferable')),
                ('regulated', models.BooleanField(default=False, verbose_name='Regulated')),
                ('notice_note', models.TextField(blank=True, null=True, verbose_name='Notice note')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.District', verbose_name='District')),
                ('financing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Financing', verbose_name='Form of financing')),
                ('hitas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Hitas', verbose_name='Hitas')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('area', models.PositiveIntegerField(verbose_name='Area in square meters')),
                ('section_area', models.PositiveIntegerField(verbose_name='Section area')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.LeaseAreaType, max_length=30, verbose_name='Type')),
                ('location', enumfields.fields.EnumField(enum=leasing.enums.LocationType, max_length=10, verbose_name='Location')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Lease')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('sequence', models.PositiveIntegerField(verbose_name='Sequence number')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.District', verbose_name='District')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseStateLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('state', enumfields.fields.EnumField(enum=leasing.enums.LeaseState, max_length=30, verbose_name='State')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Lease', verbose_name='Lease')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseType',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Form of management',
                'verbose_name_plural': 'Forms of management',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='NoticePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.PeriodType, max_length=30, verbose_name='Period type')),
                ('duration', models.CharField(blank=True, help_text='In ISO 8601 Duration format', max_length=255, null=True, verbose_name='Duration')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('area', models.PositiveIntegerField(verbose_name='Area in square meters')),
                ('section_area', models.PositiveIntegerField(verbose_name='Section area')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.PlotType, max_length=30, verbose_name='Type')),
                ('in_contract', models.BooleanField(default=False, verbose_name='At time of contract')),
                ('plot_division_identifier', models.CharField(max_length=255, verbose_name='Plot division identifier')),
                ('plot_division_date_of_approval', models.DateField(verbose_name='Plot division date of approval')),
                ('detailed_plan_identifier', models.CharField(max_length=255, verbose_name='Detailed plan identifier')),
                ('detailed_plan_date_of_approval', models.DateField(verbose_name='Detailed plan date of approval')),
                ('lease_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_units', to='leasing.LeaseArea')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanUnitState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanUnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('area', models.PositiveIntegerField(verbose_name='Area in square meters')),
                ('section_area', models.PositiveIntegerField(verbose_name='Section area')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.PlotType, max_length=30, verbose_name='Type')),
                ('registration_date', models.DateField(blank=True, null=True, verbose_name='Registration date')),
                ('in_contract', models.BooleanField(default=False, verbose_name='At time of contract')),
                ('lease_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plots', to='leasing.LeaseArea')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Form of regulation',
                'verbose_name_plural': 'Forms of regulation',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RelatedLease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.LeaseRelationType, max_length=30, verbose_name='Lease relation type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('from_lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_leases', to='leasing.Lease', verbose_name='From lease')),
                ('to_lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_leases', to='leasing.Lease', verbose_name='To lease')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticalUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportiveHousing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('share_numerator', models.PositiveIntegerField(verbose_name='Numerator')),
                ('share_denominator', models.PositiveIntegerField(verbose_name='Denominator')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reference')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.TenantContactType, max_length=255)),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Contact', verbose_name='Contact')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Tenant', verbose_name='Tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tenant',
            name='contacts',
            field=models.ManyToManyField(related_name='tenants', through='leasing.TenantContact', to='leasing.Contact'),
        ),
        migrations.AddField(
            model_name='tenant',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tenants', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='planunit',
            name='plan_unit_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.PlanUnitState', verbose_name='Plan unit state'),
        ),
        migrations.AddField(
            model_name='planunit',
            name='plan_unit_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.PlanUnitType', verbose_name='Plan unit type'),
        ),
        migrations.AddField(
            model_name='leaseidentifier',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='leaseidentifier',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.LeaseType', verbose_name='Lease type'),
        ),
        migrations.AddField(
            model_name='lease',
            name='identifier',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.LeaseIdentifier', verbose_name='Lease identifier'),
        ),
        migrations.AddField(
            model_name='lease',
            name='intended_use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.IntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='lease',
            name='lessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Contact', verbose_name='Lessor'),
        ),
        migrations.AddField(
            model_name='lease',
            name='management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Management', verbose_name='Form of management'),
        ),
        migrations.AddField(
            model_name='lease',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='lease',
            name='notice_period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.NoticePeriod', verbose_name='Notice period'),
        ),
        migrations.AddField(
            model_name='lease',
            name='regulation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Regulation', verbose_name='Form of regulation'),
        ),
        migrations.AddField(
            model_name='lease',
            name='related_leases',
            field=models.ManyToManyField(related_name='related_to', through='leasing.RelatedLease', to='leasing.Lease'),
        ),
        migrations.AddField(
            model_name='lease',
            name='statistical_use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.StatisticalUse', verbose_name='Statistical use'),
        ),
        migrations.AddField(
            model_name='lease',
            name='supportive_housing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.SupportiveHousing', verbose_name='Supportive housing'),
        ),
        migrations.AddField(
            model_name='lease',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.LeaseType', verbose_name='Lease type'),
        ),
        migrations.AddField(
            model_name='district',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='districts', to='leasing.Municipality', verbose_name='Municipality'),
        ),
        migrations.AlterUniqueTogether(
            name='leaseidentifier',
            unique_together={('type', 'municipality', 'district', 'sequence')},
        ),
        migrations.AlterUniqueTogether(
            name='district',
            unique_together={('municipality', 'identifier')},
        ),
    ]
