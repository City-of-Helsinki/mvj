# Generated by Django 2.0.4 on 2018-04-19 06:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import leasing.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankHoliday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(db_index=True, unique=True, verbose_name='Day')),
            ],
            options={
                'verbose_name': 'Bank holiday',
                'verbose_name_plural': 'Bank holidays',
                'ordering': ('day',),
            },
        ),
        migrations.CreateModel(
            name='BasisOfRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('detailed_plan_identifier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Detailed plan identifier')),
                ('lease_rights_end_date', models.DateField(blank=True, null=True, verbose_name='Lease rights end date')),
                ('index', models.PositiveIntegerField(verbose_name='Index')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BasisOfRentDecision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
            ],
        ),
        migrations.CreateModel(
            name='BasisOfRentPlotType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BasisOfRentPropertyIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
            ],
        ),
        migrations.CreateModel(
            name='BasisOfRentRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount')),
                ('period', enumfields.fields.EnumField(enum=leasing.enums.PeriodType, max_length=20, verbose_name='Period')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CommentTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('supervision_date', models.DateField(blank=True, null=True, verbose_name='Supervision date')),
                ('supervised_date', models.DateField(blank=True, null=True, verbose_name='Supervised date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConditionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstructabilityDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.ConstructabilityType, max_length=30, verbose_name='Type')),
                ('text', models.TextField(verbose_name='Text')),
                ('ahjo_reference_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='AHJO reference number')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('is_business', models.BooleanField(default=False, verbose_name='Is a business')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business name')),
                ('business_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business ID')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('postal_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Postal code')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('email', models.CharField(blank=True, max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone')),
                ('language', models.CharField(blank=True, choices=[('af', 'Afrikaans'), ('ar', 'Arabic'), ('ast', 'Asturian'), ('az', 'Azerbaijani'), ('bg', 'Bulgarian'), ('be', 'Belarusian'), ('bn', 'Bengali'), ('br', 'Breton'), ('bs', 'Bosnian'), ('ca', 'Catalan'), ('cs', 'Czech'), ('cy', 'Welsh'), ('da', 'Danish'), ('de', 'German'), ('dsb', 'Lower Sorbian'), ('el', 'Greek'), ('en', 'English'), ('en-au', 'Australian English'), ('en-gb', 'British English'), ('eo', 'Esperanto'), ('es', 'Spanish'), ('es-ar', 'Argentinian Spanish'), ('es-co', 'Colombian Spanish'), ('es-mx', 'Mexican Spanish'), ('es-ni', 'Nicaraguan Spanish'), ('es-ve', 'Venezuelan Spanish'), ('et', 'Estonian'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('fr', 'French'), ('fy', 'Frisian'), ('ga', 'Irish'), ('gd', 'Scottish Gaelic'), ('gl', 'Galician'), ('he', 'Hebrew'), ('hi', 'Hindi'), ('hr', 'Croatian'), ('hsb', 'Upper Sorbian'), ('hu', 'Hungarian'), ('ia', 'Interlingua'), ('id', 'Indonesian'), ('io', 'Ido'), ('is', 'Icelandic'), ('it', 'Italian'), ('ja', 'Japanese'), ('ka', 'Georgian'), ('kab', 'Kabyle'), ('kk', 'Kazakh'), ('km', 'Khmer'), ('kn', 'Kannada'), ('ko', 'Korean'), ('lb', 'Luxembourgish'), ('lt', 'Lithuanian'), ('lv', 'Latvian'), ('mk', 'Macedonian'), ('ml', 'Malayalam'), ('mn', 'Mongolian'), ('mr', 'Marathi'), ('my', 'Burmese'), ('nb', 'Norwegian Bokmål'), ('ne', 'Nepali'), ('nl', 'Dutch'), ('nn', 'Norwegian Nynorsk'), ('os', 'Ossetic'), ('pa', 'Punjabi'), ('pl', 'Polish'), ('pt', 'Portuguese'), ('pt-br', 'Brazilian Portuguese'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sk', 'Slovak'), ('sl', 'Slovenian'), ('sq', 'Albanian'), ('sr', 'Serbian'), ('sr-latn', 'Serbian Latin'), ('sv', 'Swedish'), ('sw', 'Swahili'), ('ta', 'Tamil'), ('te', 'Telugu'), ('th', 'Thai'), ('tr', 'Turkish'), ('tt', 'Tatar'), ('udm', 'Udmurt'), ('uk', 'Ukrainian'), ('ur', 'Urdu'), ('vi', 'Vietnamese'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese')], max_length=255, null=True, verbose_name='Language')),
                ('national_identification_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='National identification number')),
                ('address_protection', models.BooleanField(default=False, verbose_name='Address protection')),
                ('customer_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Customer number')),
                ('sap_customer_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='SAP customer number')),
                ('electronic_billing_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Electronic billing address')),
                ('partner_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Partner code')),
                ('is_lessor', models.BooleanField(default=False, verbose_name='Is a lessor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('contract_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Contract number')),
                ('signing_date', models.DateField(blank=True, null=True, verbose_name='Signing date')),
                ('signing_note', models.TextField(blank=True, null=True, verbose_name='Signing note')),
                ('is_readjustment_decision', models.BooleanField(default=False, verbose_name='Is readjustment decision')),
                ('ktj_link', models.CharField(blank=True, max_length=1024, null=True, verbose_name='KTJ link')),
                ('collateral_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Collateral number')),
                ('collateral_start_date', models.DateField(blank=True, null=True, verbose_name='Collateral starting date')),
                ('collateral_end_date', models.DateField(blank=True, null=True, verbose_name='Collateral ending date')),
                ('collateral_note', models.TextField(blank=True, null=True, verbose_name='Collateral note')),
                ('institution_identifier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Institution identifier')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signing_date', models.DateField(blank=True, null=True, verbose_name='Signing date')),
                ('sign_by_date', models.DateField(blank=True, null=True, verbose_name='Sign by date')),
                ('first_call_sent', models.DateField(blank=True, null=True, verbose_name='First call sent')),
                ('second_call_sent', models.DateField(blank=True, null=True, verbose_name='Second call sent')),
                ('third_call_sent', models.DateField(blank=True, null=True, verbose_name='Third call sent')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='ContractRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('period', enumfields.fields.EnumField(enum=leasing.enums.PeriodType, max_length=30, verbose_name='Period')),
                ('base_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Base amount')),
                ('base_amount_period', enumfields.fields.EnumField(enum=leasing.enums.PeriodType, max_length=30, verbose_name='Base amount period')),
                ('base_year_rent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Base year rent')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('reference_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reference number')),
                ('decision_date', models.DateField(blank=True, null=True, verbose_name='Decision date')),
                ('section', models.CharField(blank=True, max_length=255, null=True, verbose_name='Section')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DecisionMaker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DecisionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
            ],
            options={
                'ordering': ('municipality__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Financing',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Form of financing',
                'verbose_name_plural': 'Forms of financing',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FixedInitialYearRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hitas',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Hitas',
                'verbose_name_plural': 'Hitas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Index',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Number')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Year')),
                ('month', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
            ],
            options={
                'verbose_name': 'Index',
                'verbose_name_plural': 'Indexes',
                'ordering': ('year', 'month'),
            },
        ),
        migrations.CreateModel(
            name='IndexAdjustedRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(verbose_name='End date')),
                ('factor', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Factor')),
            ],
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspector', models.CharField(blank=True, max_length=255, null=True, verbose_name='Inspector')),
                ('supervision_date', models.DateField(blank=True, null=True, verbose_name='Supervision date')),
                ('supervised_date', models.DateField(blank=True, null=True, verbose_name='Supervised date')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='IntendedUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('sent_to_sap_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent to SAP at')),
                ('sap_id', models.CharField(blank=True, max_length=255, verbose_name='SAP ID')),
                ('due_date', models.DateField(verbose_name='Due date')),
                ('invoicing_date', models.DateField(blank=True, null=True, verbose_name='Invoicing date')),
                ('status', enumfields.fields.EnumField(enum=leasing.enums.InvoiceStatus, max_length=10, verbose_name='Status')),
                ('billing_period_start_date', models.DateField(verbose_name='Billing period start date')),
                ('billing_period_end_date', models.DateField(verbose_name='Billing period end date')),
                ('postpone_date', models.DateField(blank=True, null=True, verbose_name='Postpone date')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Total amount')),
                ('share_numerator', models.PositiveIntegerField(verbose_name='Share numerator')),
                ('share_denominator', models.PositiveIntegerField(verbose_name='Share denominator')),
                ('billed_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Billed amount')),
                ('paid_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Paid amount')),
                ('paid_date', models.DateField(blank=True, null=True, verbose_name='Paid date')),
                ('outstanding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Outstanding amount')),
                ('payment_notification_date', models.DateField(blank=True, null=True, verbose_name='Payment notification date')),
                ('collection_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Collection charge')),
                ('payment_notification_catalog_date', models.DateField(blank=True, null=True, verbose_name='Payment notification catalog date')),
                ('delivery_method', enumfields.fields.EnumField(blank=True, enum=leasing.enums.InvoiceDeliveryMethod, max_length=10, null=True, verbose_name='Delivery method')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.InvoiceType, max_length=10, verbose_name='Type')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.LeaseState, max_length=30, null=True, verbose_name='State')),
                ('classification', enumfields.fields.EnumField(blank=True, enum=leasing.enums.Classification, max_length=30, null=True, verbose_name='Classification')),
                ('intended_use_note', models.TextField(blank=True, null=True, verbose_name='Intended use note')),
                ('transferable', models.BooleanField(default=True, verbose_name='Transferable')),
                ('regulated', models.BooleanField(default=False, verbose_name='Regulated')),
                ('notice_note', models.TextField(blank=True, null=True, verbose_name='Notice note')),
                ('is_rent_info_complete', models.BooleanField(default=False, verbose_name='Rent info complete?')),
                ('is_invoicing_enabled', models.BooleanField(default=False, verbose_name='Invoicing enabled?')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.District', verbose_name='District')),
                ('financing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Financing', verbose_name='Form of financing')),
                ('hitas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Hitas', verbose_name='Hitas')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('area', models.PositiveIntegerField(verbose_name='Area in square meters')),
                ('section_area', models.PositiveIntegerField(verbose_name='Section area')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.LeaseAreaType, max_length=30, verbose_name='Type')),
                ('location', enumfields.fields.EnumField(enum=leasing.enums.LocationType, max_length=30, verbose_name='Location')),
                ('preconstruction_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.ConstructabilityState, max_length=30, null=True, verbose_name='Preconstruction state')),
                ('demolition_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.ConstructabilityState, max_length=30, null=True, verbose_name='Demolition state')),
                ('polluted_land_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.ConstructabilityState, max_length=30, null=True, verbose_name='Polluted land state')),
                ('polluted_land_rent_condition_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.PollutedLandRentConditionState, max_length=30, null=True, verbose_name='Polluted land rent condition state')),
                ('polluted_land_rent_condition_date', models.DateField(blank=True, null=True, verbose_name='Polluted land rent condition date')),
                ('polluted_land_projectwise_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='ProjectWise number')),
                ('polluted_land_matti_report_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Matti report number')),
                ('constructability_report_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.ConstructabilityState, max_length=30, null=True, verbose_name='Constructability report state')),
                ('constructability_report_investigation_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.ConstructabilityReportInvestigationState, max_length=30, null=True, verbose_name='Constructability report investigation state')),
                ('constructability_report_signing_date', models.DateField(blank=True, null=True, verbose_name='Constructability report signing date')),
                ('constructability_report_signer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Constructability report signer')),
                ('constructability_report_geotechnical_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Constructability report geotechnical number')),
                ('other_state', enumfields.fields.EnumField(blank=True, enum=leasing.enums.ConstructabilityState, max_length=30, null=True, verbose_name='Other state')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lease_areas', to='leasing.Lease')),
                ('polluted_land_planner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseBasisOfRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Floor m2')),
                ('index', models.PositiveIntegerField(blank=True, null=True, verbose_name='Index')),
                ('amount_per_floor_m2_index_100', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount per floor m^2 (index 100)')),
                ('amount_per_floor_m2_index', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount per floor m^2 (index)')),
                ('percent', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Percent')),
                ('year_rent_index_100', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Year rent (index 100)')),
                ('year_rent_index', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Year rent (index)')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseIdentifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('sequence', models.PositiveIntegerField(verbose_name='Sequence number')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.District', verbose_name='District')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseStateLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('state', enumfields.fields.EnumField(enum=leasing.enums.LeaseState, max_length=30, verbose_name='State')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Lease', verbose_name='Lease')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('identifier', models.CharField(max_length=255, unique=True, verbose_name='Identifier')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Management',
            fields=[
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Form of management',
                'verbose_name_plural': 'Forms of management',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MortgageDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Number')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mortgage_documents', to='leasing.Contract', verbose_name='Contract')),
            ],
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('identifier', models.CharField(max_length=255, unique=True, verbose_name='Identifier')),
            ],
            options={
                'verbose_name': 'Municipality',
                'verbose_name_plural': 'Municipalities',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='NoticePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.NoticePeriodType, max_length=30, verbose_name='Period type')),
                ('duration', models.CharField(blank=True, help_text='In ISO 8601 Duration format', max_length=255, null=True, verbose_name='Duration')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PayableRent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('difference_percent', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Difference percent')),
                ('calendar_year_rent', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Calendar year rent')),
            ],
        ),
        migrations.CreateModel(
            name='PlanUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('area', models.PositiveIntegerField(verbose_name='Area in square meters')),
                ('section_area', models.PositiveIntegerField(verbose_name='Section area')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.PlotType, max_length=30, verbose_name='Type')),
                ('in_contract', models.BooleanField(default=False, verbose_name='At time of contract')),
                ('plot_division_identifier', models.CharField(max_length=255, verbose_name='Plot division identifier')),
                ('plot_division_date_of_approval', models.DateField(verbose_name='Plot division date of approval')),
                ('detailed_plan_identifier', models.CharField(max_length=255, verbose_name='Detailed plan identifier')),
                ('detailed_plan_date_of_approval', models.DateField(verbose_name='Detailed plan date of approval')),
                ('lease_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_units', to='leasing.LeaseArea')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanUnitState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanUnitType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('identifier', models.CharField(max_length=255, verbose_name='Identifier')),
                ('area', models.PositiveIntegerField(verbose_name='Area in square meters')),
                ('section_area', models.PositiveIntegerField(verbose_name='Section area')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postal_code', models.CharField(max_length=255, verbose_name='Postal code')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.PlotType, max_length=30, verbose_name='Type')),
                ('registration_date', models.DateField(blank=True, null=True, verbose_name='Registration date')),
                ('in_contract', models.BooleanField(default=False, verbose_name='At time of contract')),
                ('lease_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plots', to='leasing.LeaseArea')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReceivableType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('sap_code', models.CharField(max_length=255, verbose_name='SAP code')),
            ],
            options={
                'verbose_name': 'Receivable type',
                'verbose_name_plural': 'Receivable types',
            },
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Form of regulation',
                'verbose_name_plural': 'Forms of regulation',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RelatedLease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.LeaseRelationType, max_length=30, verbose_name='Lease relation type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('from_lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_leases', to='leasing.Lease', verbose_name='From lease')),
                ('to_lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_leases', to='leasing.Lease', verbose_name='To lease')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.RentType, max_length=30, verbose_name='Type')),
                ('cycle', enumfields.fields.EnumField(blank=True, enum=leasing.enums.RentCycle, max_length=30, null=True, verbose_name='Cycle')),
                ('index_type', enumfields.fields.EnumField(blank=True, enum=leasing.enums.IndexType, max_length=30, null=True, verbose_name='Index type')),
                ('due_dates_type', enumfields.fields.EnumField(blank=True, enum=leasing.enums.DueDatesType, max_length=30, null=True, verbose_name='Due dates type')),
                ('due_dates_per_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Due dates per year')),
                ('elementary_index', models.PositiveIntegerField(blank=True, null=True, verbose_name='Elementary index')),
                ('index_rounding', models.PositiveIntegerField(blank=True, null=True, verbose_name='Index rounding')),
                ('x_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='X value')),
                ('y_value', models.PositiveIntegerField(blank=True, null=True, verbose_name='Y value')),
                ('y_value_start', models.PositiveIntegerField(blank=True, null=True, verbose_name='Y value start')),
                ('equalization_start_date', models.DateField(blank=True, null=True, verbose_name='Equalization start date')),
                ('equalization_end_date', models.DateField(blank=True, null=True, verbose_name='Equalization end date')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rents', to='leasing.Lease', verbose_name='Lease')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RentAdjustment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.RentAdjustmentType, max_length=30, verbose_name='Type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('full_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Full amount')),
                ('amount_type', enumfields.fields.EnumField(enum=leasing.enums.RentAdjustmentAmountType, max_length=30, verbose_name='Amount type')),
                ('amount_left', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount left')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('decision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Decision', verbose_name='Decision')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RentDueDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('day', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)], verbose_name='Day')),
                ('month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
                ('rent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='due_dates', to='leasing.Rent', verbose_name='Rent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RentIntendedUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatisticalUse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SupportiveHousing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('share_numerator', models.PositiveIntegerField(verbose_name='Numerator')),
                ('share_denominator', models.PositiveIntegerField(verbose_name='Denominator')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reference')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Time created')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Time modified')),
                ('type', enumfields.fields.EnumField(enum=leasing.enums.TenantContactType, max_length=255)),
                ('start_date', models.DateField(verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Contact', verbose_name='Contact')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Tenant', verbose_name='Tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tenant',
            name='contacts',
            field=models.ManyToManyField(related_name='tenants', through='leasing.TenantContact', to='leasing.Contact'),
        ),
        migrations.AddField(
            model_name='tenant',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tenants', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='rentadjustment',
            name='intended_use',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.RentIntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='rentadjustment',
            name='rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rent_adjustments', to='leasing.Rent', verbose_name='Rent'),
        ),
        migrations.AddField(
            model_name='planunit',
            name='plan_unit_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.PlanUnitState', verbose_name='Plan unit state'),
        ),
        migrations.AddField(
            model_name='planunit',
            name='plan_unit_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.PlanUnitType', verbose_name='Plan unit type'),
        ),
        migrations.AddField(
            model_name='payablerent',
            name='rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payable_rents', to='leasing.Rent', verbose_name='Rent'),
        ),
        migrations.AddField(
            model_name='leaseidentifier',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='leaseidentifier',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.LeaseType', verbose_name='Lease type'),
        ),
        migrations.AddField(
            model_name='leasebasisofrent',
            name='intended_use',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.RentIntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='leasebasisofrent',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='basis_of_rents', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='lease',
            name='identifier',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.LeaseIdentifier', verbose_name='Lease identifier'),
        ),
        migrations.AddField(
            model_name='lease',
            name='intended_use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.IntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='lease',
            name='lessor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Contact', verbose_name='Lessor'),
        ),
        migrations.AddField(
            model_name='lease',
            name='management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Management', verbose_name='Form of management'),
        ),
        migrations.AddField(
            model_name='lease',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='lease',
            name='notice_period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.NoticePeriod', verbose_name='Notice period'),
        ),
        migrations.AddField(
            model_name='lease',
            name='regulation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Regulation', verbose_name='Form of regulation'),
        ),
        migrations.AddField(
            model_name='lease',
            name='related_leases',
            field=models.ManyToManyField(related_name='related_to', through='leasing.RelatedLease', to='leasing.Lease'),
        ),
        migrations.AddField(
            model_name='lease',
            name='statistical_use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.StatisticalUse', verbose_name='Statistical use'),
        ),
        migrations.AddField(
            model_name='lease',
            name='supportive_housing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.SupportiveHousing', verbose_name='Supportive housing'),
        ),
        migrations.AddField(
            model_name='lease',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.LeaseType', verbose_name='Lease type'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='receivable_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.ReceivableType', verbose_name='Receivable type'),
        ),
        migrations.AddField(
            model_name='invoice',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.Contact', verbose_name='Recipient'),
        ),
        migrations.AddField(
            model_name='inspection',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inspections', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='indexadjustedrent',
            name='intended_use',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.RentIntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='indexadjustedrent',
            name='rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='index_adjusted_rents', to='leasing.Rent', verbose_name='Rent'),
        ),
        migrations.AddIndex(
            model_name='index',
            index=models.Index(fields=['year', 'month'], name='leasing_ind_year_ffd71e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='index',
            unique_together={('year', 'month')},
        ),
        migrations.AddField(
            model_name='fixedinitialyearrent',
            name='rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixed_initial_year_rents', to='leasing.Rent', verbose_name='Rent'),
        ),
        migrations.AddField(
            model_name='district',
            name='municipality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='districts', to='leasing.Municipality', verbose_name='Municipality'),
        ),
        migrations.AddField(
            model_name='decision',
            name='decision_maker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='decisions', to='leasing.DecisionMaker', verbose_name='Decision maker'),
        ),
        migrations.AddField(
            model_name='decision',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='decisions', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='decision',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='leasing.DecisionType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='contractrent',
            name='intended_use',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.RentIntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='contractrent',
            name='rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_rents', to='leasing.Rent', verbose_name='Rent'),
        ),
        migrations.AddField(
            model_name='contractchange',
            name='contract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contract_changes', to='leasing.Contract', verbose_name='Contract'),
        ),
        migrations.AddField(
            model_name='contractchange',
            name='decision',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Decision', verbose_name='Decision'),
        ),
        migrations.AddField(
            model_name='contract',
            name='decision',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Decision', verbose_name='Decision'),
        ),
        migrations.AddField(
            model_name='contract',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contracts', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='contract',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.ContractType', verbose_name='Contract type'),
        ),
        migrations.AddField(
            model_name='constructabilitydescription',
            name='lease_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='constructability_descriptions', to='leasing.LeaseArea'),
        ),
        migrations.AddField(
            model_name='constructabilitydescription',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='condition',
            name='decision',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='conditions', to='leasing.Decision', verbose_name='Decision'),
        ),
        migrations.AddField(
            model_name='condition',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='leasing.ConditionType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='comment',
            name='lease',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='leasing.Lease', verbose_name='Lease'),
        ),
        migrations.AddField(
            model_name='comment',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.CommentTopic', verbose_name='Topic'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='basisofrentrate',
            name='basis_of_rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rent_rates', to='leasing.BasisOfRent', verbose_name='Basis of rent'),
        ),
        migrations.AddField(
            model_name='basisofrentrate',
            name='intended_use',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.RentIntendedUse', verbose_name='Intended use'),
        ),
        migrations.AddField(
            model_name='basisofrentpropertyidentifier',
            name='basis_of_rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_identifiers', to='leasing.BasisOfRent', verbose_name='Basis of rent'),
        ),
        migrations.AddField(
            model_name='basisofrentdecision',
            name='basis_of_rent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='decisions', to='leasing.BasisOfRent'),
        ),
        migrations.AddField(
            model_name='basisofrent',
            name='financing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Financing', verbose_name='Form of financing'),
        ),
        migrations.AddField(
            model_name='basisofrent',
            name='management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='leasing.Management', verbose_name='Form of management'),
        ),
        migrations.AddField(
            model_name='basisofrent',
            name='plot_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='leasing.BasisOfRentPlotType', verbose_name='Plot type'),
        ),
        migrations.AlterUniqueTogether(
            name='leaseidentifier',
            unique_together={('type', 'municipality', 'district', 'sequence')},
        ),
        migrations.AlterUniqueTogether(
            name='district',
            unique_together={('municipality', 'identifier')},
        ),
    ]
